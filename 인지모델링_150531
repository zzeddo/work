인지 모델링 2회차 후기입니다.
일요일 새벽에 더 자고 싶고, 가족과 함께 시간을 보내고 싶었지만
인지모델링을 공부해서 다양한 분야에 적용하고 싶은 바람으로 강의 장소로 이동할 수 있었습니다.
김덕태님께서 장소를 제공해 주셔서 신림동 사무실에서 스타디를 하였으며
스터디 이후, 등촌 칼국수에서 맛있게 늦은 점심을 함께 하였습니다.
다음주 일요일이 기대되는 자리였습니다.
-------------------------
1. The Oxford handbook of computational and mathematical psychology 
주제 : Multidimensional Signal Detection Theory - 김무성님
ipython notebook를 통해 스터디 자료를 작성해 주셨으며
외부에 신호에 대하여 감각 기관을 통하여 지각이 되는 과정(및 방법)에 대한 이론에 대하여 배울 수 있었습니다.
강의 중에 Perceptual에 대한 이해를 위하여 "감각과 지각" 책을 언급하여 주셨습니다.
신호탐지이론은 레이저 탐지 이론에서 도출되었다.
(Signal Detection Theory : SDT)
신호 자체도 Noise가 있지만 신호를 인지하는 사람(혹은 기계)도 Noise가 있으며신호를 인지하는 사람의 경험과 피로도 등 다양한 요소를 고려해야 한다.
감각(Sensing), 인지(Cognitive), 지각(Perceptual)
여러개의 신호(Signal)에 대하여 어떻게 인지하고 분석할지가 주요 화두임
Noise는 Signal 자체와, 감지하는 사람(혹은 기계)에 있다.
신호(Signal) -> 모델(Model) -> 데이터(Data)
이론 : General Recognition Theory을 사용하여 학습함
Perceptual separability & integral
Perceptual independence
Decisional separability
Signal - Response
Perception & Decision에 대한 모델링 필요하다.
The Multivariate Normal Model
---------------------------
2. 안드로이드 
주제 : JAVA - 송한나 님
프로그래밍 언어인 Java에 대하여 1시간에 완전 정복할 수 있도록 
"Hello World" 출력 예제부터, 자료형, 제어문, 클래스, 멤버번수, 메서드, 상속, Interface,
Overloading, Overriding, Polymorphism, exception 처리, 파일입출력, Thread 처리까지....
한마디로 Java의 모든 주제에 대하여 1시간에 완벽히 소화할 수 있도록 준비해 주셨습니다.
----------------------------
3. Bayesian Cognitive Modeling : 김슬님
주제 : 2 Getting started with WinBUGS 
MCMC(Markov Chain Monte Carlo) 분석을 위해
WinBUGS(Bayesian inference Using Gibbs Sampling) 대신에 JAGS 프로그램을 설치하고
R에 JAGS 팩키지를 설치하여,
R 기반에서 다양한 통계 모형에 대하여 실습할 수 있었습니다.
WinBUGS 대신에 JARS를 설치하여 실습 진행함
MCMC, Markov Chain Monte Carlo 및 WinBugs 무료 소프트웨어 사용 가능함.
(BUGS (Bayesian inference Using Gibbs Sampling) )
JAGS는 MCMC를 사용시 반복되는 작업을 최소화하기 위해 탄생함
실습에서는 JAGS를 사용함
다운로드 사이트 : http://sourceforge.net/projects/mcmc-jags/…/latest/download…
파일 : JAGS-3.4.0.exe
R에서의 설치 : install.packages("rjags")
첫번째 프로그램
JAGS를 돌리기 위한 3가지 요소
. 모델
. 데이터
. 초기값
모델의 정의
예제 : 
library(rjags)
simpleModelString = ''
model {
# Likelihood
for (i in 1:N) {
Y[i] ~ dbern(theta)
}
# Prior
theta ~ dbeta(3, 3)
}
m = jags.model(
textConnection(simpleModelString),
data = list(
Y = c(1, 0, 0, 1, 1),
N = 5
)
)
plot(coda.samples(jags.model(
textConnection("
model {
theta ~ dbeta(1, 1)
k ~ dbin(theta, n)
}
"),
data = list(n=2)
), c("theta", "k"), 500))
